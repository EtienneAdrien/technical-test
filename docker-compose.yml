services:
  app:
    image: app:latest
    env_file:
      - .env
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 80 --log-config=./app/logging.yaml
    build:
      context: ./app
      dockerfile: ./Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./app:/code/app
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_healthy
    profiles:
      - app

  database:
    image: postgres:16.3-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 120s
      retries: 10
      start_period: 5s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    profiles:
      - app

  redis:
    image: redis:7.2.5-alpine
    env_file:
      - .env
    command: redis-server /redis.conf
    volumes:
      - ./redis:/data
      - ./redis.conf:/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--no-auth-warning", "ping"]
      interval: 5s
      timeout: 120s
      retries: 10
      start_period: 5s
    ports:
      - "6379:6379"
    profiles:
      - app

  worker:
    image: app:latest
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: ./Dockerfile
    command: arq app.utils.redis.worker.WorkerSettings
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_healthy
    volumes:
      - ./app:/code/app
    profiles:
      - app

  dead-letter:
    image: app:latest
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: ./Dockerfile
    command: arq app.utils.redis.worker.DeadLetterSettings --burst
    volumes:
      - ./app:/code/app
    profiles:
      - dead-letter